// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------------------- User Table ----------------------
model User {
  id          Int           @id @default(autoincrement())
  login       String        @unique
  password    String
  roles       Role[]        @default([TEACHER])
  Token       Token[]
  Performance Performance[]

  @@map("users")
}

enum Role {
  TEACHER
  ADMIN
}

// ---------------------- Token Table ----------------------
model Token {
  token     String   @unique
  exp       DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  userAgent String   @map("user_agent")

  @@map("tokens")
}

// ---------------------- Class Table ----------------------
model Class {
  id          Int       @id @default(autoincrement())
  numberClass Int
  letterClass String
  Student     Student[]

  @@map("class")
}

// ---------------------- Student Table ----------------------
model Student {
  id      Int    @id @default(autoincrement())
  fio     String
  class   Class  @relation(fields: [classId], references: [id])
  classId Int    @map("class_id")

  @@map("student")
}

// ---------------------- Subject Table ----------------------
model Subject {
  id     Int      @id @default(autoincrement())
  name   String
  Topic  Topic[]
  Lesson Lesson[]

  @@map("subject")
}

// ---------------------- Topics Table ----------------------
model Topic {
  id        Int      @id @default(autoincrement())
  subject   Subject  @relation(fields: [subjectId], references: [id])
  subjectId Int      @map("subject_id")
  name      String
  Lesson    Lesson[]

  @@map("topic")
}

// ---------------------- Lesson Table ----------------------
model Lesson {
  id          Int           @id @default(autoincrement())
  topic       Topic         @relation(fields: [topicId], references: [id])
  topicId     Int           @map("topic_id")
  subject     Subject       @relation(fields: [subjectId], references: [id])
  subjectId   Int           @map("subject_id")
  lessonDate DateTime       @map("lesson_date")
  Performance Performance[]

  @@map("lesson")
}

// ---------------------- Perfomance Table ----------------------
model Performance {
  id                Int    @id @default(autoincrement())
  studentId         Int    @map("student_id")
  user              User   @relation(fields: [teacherId], references: [id])
  teacherId         Int    @map("teacher_id")
  lesson            Lesson @relation(fields: [lessonId], references: [id])
  lessonId          Int    @map("lesson_id")
  attendanceStatus Status

  @@map("performance")
}

enum Status {
  DELAY // опоздпние
  ABSENCE // отсутствие
  PRESENCE // присутствие
}
